!function(n){function s(s){for(var e,l,c=s[0],r=s[1],p=s[2],u=0,d=[];u<c.length;u++)l=c[u],Object.prototype.hasOwnProperty.call(t,l)&&t[l]&&d.push(t[l][0]),t[l]=0;for(e in r)Object.prototype.hasOwnProperty.call(r,e)&&(n[e]=r[e]);for(i&&i(s);d.length;)d.shift()();return o.push.apply(o,p||[]),a()}function a(){for(var n,s=0;s<o.length;s++){for(var a=o[s],e=!0,c=1;c<a.length;c++){var r=a[c];0!==t[r]&&(e=!1)}e&&(o.splice(s--,1),n=l(l.s=a[0]))}return n}var e={},t={6:0,18:0},o=[];function l(s){if(e[s])return e[s].exports;var a=e[s]={i:s,l:!1,exports:{}};return n[s].call(a.exports,a,a.exports,l),a.l=!0,a.exports}l.m=n,l.c=e,l.d=function(n,s,a){l.o(n,s)||Object.defineProperty(n,s,{enumerable:!0,get:a})},l.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},l.t=function(n,s){if(1&s&&(n=l(n)),8&s)return n;if(4&s&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(l.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&s&&"string"!=typeof n)for(var e in n)l.d(a,e,function(s){return n[s]}.bind(null,e));return a},l.n=function(n){var s=n&&n.__esModule?function(){return n.default}:function(){return n};return l.d(s,"a",s),s},l.o=function(n,s){return Object.prototype.hasOwnProperty.call(n,s)},l.p="/san-docit/";var c=window.webpackJsonp=window.webpackJsonp||[],r=c.push.bind(c);c.push=s,c=c.slice();for(var p=0;p<c.length;p++)s(c[p]);var i=r;o.push([49,0]),a()}({12:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return c}));var e,t,o,l=a(0);class c extends l.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}o={},(t="components")in(e=c)?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o}.call(this,a(3))},37:function(n,s){n.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B">快速上手</h1> <blockquote> <p><strong>前提条件</strong></p> <p>SDoc 需要 Node.js &gt;= 10</p> </blockquote> <p>本文会帮助你从头搭建一个简单的 SDoc 文档。如果你想在一个现有项目中使用 SDoc 管理文档，从步骤 3 开始。</p> <ol> <li>创建并进入一个新目录</li> </ol> <pre class="language-shell"><code class="language-shell"><span class="token function">mkdir</span> sdoc-starter <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> sdoc-starter</code></pre> <ol start="2"> <li>使用你喜欢的包管理器进行初始化</li> </ol> <pre class="language-shell"><code class="language-shell"><span class="token function">yarn</span> init <span class="token comment"># npm init</span></code></pre> <ol start="3"> <li>将 SDoc 安装为本地依赖</li> </ol> <p>我们已经不再推荐全局安装 SDoc</p> <pre class="language-shell"><code class="language-shell"><span class="token function">yarn</span> <span class="token function">add</span> -D @sdoc/cli <span class="token comment"># npm install -D @sdoc/cli</span></code></pre> <blockquote> <p><strong>注意</strong></p> <p>如果你的现有项目依赖了 webpack 3.x，我们推荐使用 Yarn 而不是 npm 来安装 SDoc。因为在这种情形下，npm 会生成错误的依赖树。</p> </blockquote> <ol start="4"> <li>创建你的第一篇文档</li> </ol> <pre class="language-shell"><code class="language-shell"><span class="token function">mkdir</span> docs <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">\'# Hello SDoc\'</span> <span class="token operator">></span> docs/README.md</code></pre> <ol start="5"> <li>在 package.json 中添加一些 scripts</li> </ol> <p>这一步骤是可选的，但我们推荐你完成它。在下文中，我们会默认这些 scripts 已经被添加。</p> <pre class="language-shell"><code class="language-shell"><span class="token punctuation">{</span>\n  <span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>\n    <span class="token string">"docs:start"</span><span class="token builtin class-name">:</span> <span class="token string">"sdoc start docs"</span>,\n    <span class="token string">"docs:build"</span><span class="token builtin class-name">:</span> <span class="token string">"sdoc build docs"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre> <ol start="6"> <li>在本地启动服务器</li> </ol> <pre class="language-shell"><code class="language-shell"><span class="token function">yarn</span> docs:start <span class="token comment"># npm run docs:start</span></code></pre> <p>SDoc 会在 http://localhost:8080 启动一个热重载的开发服务器。</p> <p>现在，你应该已经有了一个简单可用的 SDoc 文档。接下来，了解一下推荐的 <a href="https://ecomfe.github.io/san-docit/guide/directory-structure/" target="_blank">目录结构</a> 和 SDoc 中的 <a href="https://ecomfe.github.io/san-docit/guide/basic-config/" target="_blank">基本配置</a>。</p> </div></div> '},49:function(n,s,a){var e=a(1),t=a(37),o=a(12).default;n.exports=a(12),n.exports.default=e(o,t,[])}});